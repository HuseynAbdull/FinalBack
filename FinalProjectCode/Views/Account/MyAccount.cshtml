@*@inject UserManager<AppUser> userManager
@{
    AppUser appUser = null;
    if (User.Identity.IsAuthenticated)
    {
        appUser = await userManager.FindByNameAsync(User.Identity.Name);
    }
}*@

@model ProfileVM

<section id="my-account">
    <div class="container">
        <div class="account-info">
            <h4>ACCOUNT DETAILS</h4>
            <a asp-controller="account" asp-action="logout">LOGOUT</a>
        </div>
        <div class="account-order">
            <div class="left-account">
                <h6>@User.Identity.Name</h6>
                <h4>PRIMARY ADDRESS</h4>
                <a class="addAdress" style="cursor:pointer;background-color:aquamarine"><i class="far fa-edit">Add Address</i></a>
                <div class="addressForm d-none">
                    @await Html.PartialAsync("_AddressFormPartial",new Address())
                </div>
                <div class="addressContainer">
                    @if (Model.Addresses != null && Model.Addresses.Count() > 0)
                    {
                        foreach (Address address in Model.Addresses)
                        {
                            <p>@address.AddressLine</p>
                            <p>@address.City</p>
                        }
                    }
                    <a style="cursor:pointer;background-color:aquamarine"><i class="far fa-edit">Edit Address</i></a>
                </div>
                <p class="small fw-bold mt-2 pt-1 mb-0">
                    Edit Profile ---> <a asp-controller="account" asp-action="profile" class="link register-ha">Go</a>
                </p>

            </div>
            <div class="vr"></div>
            <div class="order-history">
                <h4>ORDER HISTORY</h4>
                <p>You haven't placed any orders yet.</p>
            </div>
        </div>
    </div>
</section>
